buildscript {
    ext {
        springBootVersion = '1.5.2.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'eclipse'
    apply plugin: 'jacoco'

    sourceCompatibility = 1.8
}
apply plugin: 'org.springframework.boot'

version = '0.0.1-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    compile project(':app-data')
    compile project(':app-scraper')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.hibernate:hibernate-core:5.2.9.Final')
    compile('org.springframework.boot:spring-boot-starter-aop')
    compile('org.springframework.boot:spring-boot-starter-security')
    compile('org.springframework.security:spring-security-taglibs')
    compile('org.springframework.boot:spring-boot-starter-mail')
    compile('javax.servlet:jstl')
    runtime('org.springframework.boot:spring-boot-starter-tomcat')
    runtime('org.apache.tomcat.embed:tomcat-embed-jasper')
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('org.dbunit:dbunit:2.5.3')
    testCompile('com.github.springtestdbunit:spring-test-dbunit:1.3.0')
}

task codeCoverageReport(type: JacocoReport) {
    executionData fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec")

    subprojects.each {
        sourceSets it.sourceSets.main
    }

    reports {
        xml.enabled true
        xml.destination "${buildDir}/reports/jacoco/report.xml"
        html.enabled false
        csv.enabled false
    }
}

codeCoverageReport.dependsOn {
    subprojects*.test
}
